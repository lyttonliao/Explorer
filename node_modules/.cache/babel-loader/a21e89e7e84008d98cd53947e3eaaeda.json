{"ast":null,"code":"var _jsxFileName = \"/Users/lyttonliao/Desktop/Blockchain_Challenge/explorer/src/frontend/components/transaction/transaction.jsx\";\nimport React from 'react';\nimport TransactionItem from './transaction_item';\n\nclass Transaction extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    debugger;\n    this.props.fetchTx(this.props.match.params.tx);\n  }\n\n  convertToTime(unix) {\n    const date = new Date(unix * 1000);\n    return date.toLocaleDateString('default', {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric'\n    });\n  }\n\n  convertToBTC(value) {\n    return value / 100000000;\n  }\n\n  inputArr(inputs) {\n    let modifiedInputs = [];\n    inputs.forEach(input => {\n      if (input.prev_out !== undefined) {\n        const prev = input.prev_out;\n        const address = prev.addr;\n        const value = this.convertToBTC(prev.value);\n        var newInput = {\n          'address': address,\n          'value': value\n        };\n        modifiedInputs.push(newInput);\n      }\n    });\n    return modifiedInputs;\n  }\n\n  outputArr(outputs) {\n    let modifiedOutputs = [];\n    outputs.forEach(out => {\n      const address = out.addr;\n      const value = this.convertToBTC(out.value);\n      const newOutput = {\n        'address': address,\n        'value': value\n      };\n      modifiedOutputs.push(newOutput);\n    });\n    return modifiedOutputs;\n  }\n\n  totalInput(inputs) {\n    let prevVal = 0;\n    inputs.forEach(input => {\n      prevVal += parseFloat(input.val) || 0;\n    });\n    return prevVal;\n  }\n\n  diffPerTx(outputs) {\n    let currVal = 0;\n    outputs.forEach(output => {\n      currVal += parseFloat(output.value);\n    });\n    return currVal;\n  }\n\n  createTxItem() {\n    debugger;\n    const tx = this.props.tx;\n    const hash = tx.hash;\n    const inputs = this.inputArr(tx.inputs);\n    const outputs = this.outputArr(tx.out);\n    const currVal = this.diffPerTx(outputs);\n    return React.createElement(TransactionItem, {\n      hash: hash,\n      inputs: inputs,\n      outputs: outputs,\n      currVal: currVal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    const tx = this.props.tx;\n    if (Object.values(tx).length === 0) return null;\n    debugger;\n    const txItem = this.createTxItem();\n    const inputs = this.inputArr(tx.inputs);\n    const outputs = this.outputArr(tx.out);\n    const currVal = this.diffPerTx(outputs);\n    const prevVal = this.totalInput(inputs);\n    const time = this.convertToTime(tx.time);\n    return React.createElement(\"div\", {\n      className: \"tx-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"tx-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Transactions\"), txItem, React.createElement(\"div\", {\n      className: \"tx-desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tx-desc-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tx-summary-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"tx-summary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Summary\")), React.createElement(\"div\", {\n      className: \"tx-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Weight\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, tx.weight)), React.createElement(\"div\", {\n      className: \"tx-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Size\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, tx.size)), React.createElement(\"div\", {\n      className: \"tx-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Received Time\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, time)), React.createElement(\"div\", {\n      className: \"tx-row last\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Included In Block\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, tx.block_height))), React.createElement(\"div\", {\n      className: \"tx-desc-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tx-summary-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"tx-summary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Inputs and Outputs\")), React.createElement(\"div\", {\n      className: \"tx-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Total Input\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, prevVal)), React.createElement(\"div\", {\n      className: \"tx-row last\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Total Output\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, currVal)))));\n  }\n\n}\n\nexport default Transaction;","map":{"version":3,"sources":["/Users/lyttonliao/Desktop/Blockchain_Challenge/explorer/src/frontend/components/transaction/transaction.jsx"],"names":["React","TransactionItem","Transaction","Component","constructor","props","componentDidMount","fetchTx","match","params","tx","convertToTime","unix","date","Date","toLocaleDateString","year","month","day","hour","minute","convertToBTC","value","inputArr","inputs","modifiedInputs","forEach","input","prev_out","undefined","prev","address","addr","newInput","push","outputArr","outputs","modifiedOutputs","out","newOutput","totalInput","prevVal","parseFloat","val","diffPerTx","currVal","output","createTxItem","hash","render","Object","values","length","txItem","time","weight","size","block_height"],"mappings":"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","sourcesContent":["import React from 'react'\nimport TransactionItem from './transaction_item'\n\nclass Transaction extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    componentDidMount() {\n        debugger\n        this.props.fetchTx(this.props.match.params.tx)\n    }\n\n    convertToTime(unix) {\n        const date = new Date(unix * 1000)\n        return date.toLocaleDateString('default', { year: 'numeric', month: 'numeric', day: 'numeric', hour: 'numeric', minute: 'numeric' })\n    }\n\n    convertToBTC(value) {\n        return value / 100000000\n    }\n\n    inputArr(inputs) {\n        let modifiedInputs = []\n        inputs.forEach(input => {\n            if (input.prev_out !== undefined) {\n                const prev = input.prev_out\n                const address = prev.addr\n                const value = this.convertToBTC(prev.value)\n                var newInput = {\n                    'address': address,\n                    'value': value,\n                }\n                modifiedInputs.push(newInput)\n            }\n        })\n        return modifiedInputs;\n    }\n\n    outputArr(outputs) {\n        let modifiedOutputs = []\n        outputs.forEach(out => {\n            const address = out.addr\n            const value = this.convertToBTC(out.value)\n            const newOutput = {\n                'address': address,\n                'value': value,\n            }\n            modifiedOutputs.push(newOutput)\n        })\n        return modifiedOutputs\n    }\n\n    totalInput(inputs) {\n        let prevVal = 0\n        inputs.forEach(input => {\n            prevVal += parseFloat(input.val) || 0\n        })\n        return prevVal;\n    }\n\n    diffPerTx(outputs) {\n        let currVal = 0\n        outputs.forEach(output => {\n            currVal += parseFloat(output.value)\n        })\n        return currVal\n    }\n\n    createTxItem () {\n        debugger\n        const { tx } = this.props\n        const hash = tx.hash\n        const inputs = this.inputArr(tx.inputs)\n        const outputs = this.outputArr(tx.out)\n        const currVal = this.diffPerTx(outputs)\n        return (\n            <TransactionItem \n                hash={hash}\n                inputs={inputs}\n                outputs={outputs}\n                currVal={currVal}\n            />\n        )\n    }\n\n    render() {\n        const { tx } = this.props\n        if (Object.values(tx).length === 0) return null;\n\n        debugger\n\n        const txItem = this.createTxItem()\n        const inputs = this.inputArr(tx.inputs)\n        const outputs = this.outputArr(tx.out)\n        const currVal = this.diffPerTx(outputs)\n        const prevVal = this.totalInput(inputs)\n        const time = this.convertToTime(tx.time)\n\n        return (\n            <div className=\"tx-page\">\n                <h3 className=\"tx-title\">Transactions</h3>\n\n                {txItem}\n                <div className=\"tx-desc\">\n                    <div className=\"tx-desc-1\">\n                        <div className=\"tx-summary-row\">\n                            <h3 className=\"tx-summary\">Summary</h3>\n                        </div>\n                        <div className=\"tx-row\">\n                            <p>Weight</p>\n                            <p>{tx.weight}</p>\n                        </div>\n                        <div className=\"tx-row\">\n                            <p>Size</p>\n                            <p>{tx.size}</p>\n                        </div>\n                        <div className=\"tx-row\">\n                            <p>Received Time</p>\n                            <p>{time}</p>\n                        </div>\n                        <div className=\"tx-row last\">\n                            <p>Included In Block</p>\n                            <p>{tx.block_height}</p>\n                        </div>\n                    </div>\n                    <div className=\"tx-desc-2\">\n                        <div className=\"tx-summary-row\">\n                            <h3 className=\"tx-summary\">Inputs and Outputs</h3>\n                        </div>\n                        <div className=\"tx-row\">\n                            <p>Total Input</p>\n                            <p>{prevVal}</p>\n                        </div>\n                        <div className=\"tx-row last\">\n                            <p>Total Output</p>\n                            <p>{currVal}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Transaction"]},"metadata":{},"sourceType":"module"}