{"ast":null,"code":"import * as BCApiUtil from '../util/bc_api_util';\nexport const RECEIVE_ADDRESS = \"RECEIVE_ADDRESS\";\nexport const RECEIVE_BLOCKCOUNT = \"RECEIVE_BLOCKCOUNT\";\nexport const receiveAddress = data => {\n  return {\n    type: RECEIVE_ADDRESS,\n    data\n  };\n};\nexport const receiveBlockCount = data => {\n  return {\n    type: RECEIVE_BLOCKCOUNT,\n    data\n  };\n};\nexport const fetchAddress = address = dispatch => {\n  return BCApiUtil.fetchBCAddressDetail(address).then(data => dispatch(receiveAddress(data)));\n};\nexport const fetchBlockCount = dispatch => {\n  return BCApiUtil.fetchBCBlockCount().then(data => dispatch(receiveBlockCount(data)));\n};","map":{"version":3,"sources":["/Users/lyttonliao/Desktop/Blockchain_Challenge/explorer/src/frontend/actions/bc_actions.js"],"names":["BCApiUtil","RECEIVE_ADDRESS","RECEIVE_BLOCKCOUNT","receiveAddress","data","type","receiveBlockCount","fetchAddress","address","dispatch","fetchBCAddressDetail","then","fetchBlockCount","fetchBCBlockCount"],"mappings":"AAAA,OAAO,KAAKA,SAAZ,MAA2B,qBAA3B;AAEA,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AAEP,OAAO,MAAMC,cAAc,GAAGC,IAAI,IAAI;AAClC,SAAO;AACHC,IAAAA,IAAI,EAAEJ,eADH;AAEHG,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,iBAAiB,GAAGF,IAAI,IAAI;AACrC,SAAO;AACHC,IAAAA,IAAI,EAAEH,kBADH;AAEHE,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,YAAY,GAAGC,OAAO,GAAGC,QAAQ,IAAI;AAC9C,SACIT,SAAS,CAACU,oBAAV,CAA+BF,OAA/B,EAAwCG,IAAxC,CAA6CP,IAAI,IAAIK,QAAQ,CAACN,cAAc,CAACC,IAAD,CAAf,CAA7D,CADJ;AAGH,CAJM;AAMP,OAAO,MAAMQ,eAAe,GAAGH,QAAQ,IAAI;AACvC,SACIT,SAAS,CAACa,iBAAV,GAA8BF,IAA9B,CAAmCP,IAAI,IAAIK,QAAQ,CAACH,iBAAiB,CAACF,IAAD,CAAlB,CAAnD,CADJ;AAGH,CAJM","sourcesContent":["import * as BCApiUtil from '../util/bc_api_util'\n\nexport const RECEIVE_ADDRESS = \"RECEIVE_ADDRESS\";\nexport const RECEIVE_BLOCKCOUNT = \"RECEIVE_BLOCKCOUNT\";\n\nexport const receiveAddress = data => {\n    return {\n        type: RECEIVE_ADDRESS,\n        data\n    }\n}\n\nexport const receiveBlockCount = data => {\n    return {\n        type: RECEIVE_BLOCKCOUNT,\n        data\n    }\n}\n\nexport const fetchAddress = address = dispatch => {\n    return (\n        BCApiUtil.fetchBCAddressDetail(address).then(data => dispatch(receiveAddress(data)))\n    ) \n}\n\nexport const fetchBlockCount = dispatch => {\n    return (\n        BCApiUtil.fetchBCBlockCount().then(data => dispatch(receiveBlockCount(data)))\n    )\n}"]},"metadata":{},"sourceType":"module"}