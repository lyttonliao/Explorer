{"ast":null,"code":"import * as BlockApiUtil from '../util/block_api_util';\nexport const RECEIVE_BLOCK = \"RECEIVE_BLOCK\";\nexport const RECEIVE_ALL_BLOCKS = \"RECEIVE_ALL_BLOCKS\";\nexport const RECEIVE_SPECIFIC_BLOCKS = \"RECEIVE_SPECIFIC_BLOCKS\";\n\nconst receiveBlock = data => {\n  return {\n    type: RECEIVE_BLOCK,\n    data\n  };\n};\n\nconst receiveAllBlocks = data => {\n  return {\n    type: RECEIVE_ALL_BLOCKS,\n    data\n  };\n};\n\nconst receiveSpecificBlocks = data => {\n  return {\n    type: RECEIVE_SPECIFIC_BLOCKS,\n    data\n  };\n};\n\nexport const fetchBlock = block_hash => dispatch => {\n  return BlockApiUtil.fetchBlock(block_hash).then(data => dispatch(receiveBlock(data)));\n};\nexport const fetchAllBlocks = time => dispatch => {\n  return BlockApiUtil.fetchAllBlocks(time).then(data => dispatch(receiveAllBlocks(data)));\n};\nexport const fetchSpecificBlocks = pool_name => dispatch => {\n  return BlockApiUtil.fetchSpecificBlocks(pool_name).then(data => dispatch(receiveSpecificBlocks(data)));\n};","map":{"version":3,"sources":["/Users/lyttonliao/Desktop/Blockchain_Challenge/explorer/src/frontend/actions/block_actions.js"],"names":["BlockApiUtil","RECEIVE_BLOCK","RECEIVE_ALL_BLOCKS","RECEIVE_SPECIFIC_BLOCKS","receiveBlock","data","type","receiveAllBlocks","receiveSpecificBlocks","fetchBlock","block_hash","dispatch","then","fetchAllBlocks","time","fetchSpecificBlocks","pool_name"],"mappings":"AAAA,OAAO,KAAKA,YAAZ,MAA8B,wBAA9B;AAEA,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;;AAEP,MAAMC,YAAY,GAAGC,IAAI,IAAI;AACzB,SAAO;AACHC,IAAAA,IAAI,EAAEL,aADH;AAEHI,IAAAA;AAFG,GAAP;AAIH,CALD;;AAOA,MAAME,gBAAgB,GAAGF,IAAI,IAAI;AAC7B,SAAO;AACHC,IAAAA,IAAI,EAAEJ,kBADH;AAEHG,IAAAA;AAFG,GAAP;AAIH,CALD;;AAOA,MAAMG,qBAAqB,GAAGH,IAAI,IAAI;AAClC,SAAO;AACHC,IAAAA,IAAI,EAAEH,uBADH;AAEHE,IAAAA;AAFG,GAAP;AAIH,CALD;;AAOA,OAAO,MAAMI,UAAU,GAAGC,UAAU,IAAIC,QAAQ,IAAI;AAChD,SAAOX,YAAY,CAACS,UAAb,CAAwBC,UAAxB,EAAoCE,IAApC,CAAyCP,IAAI,IAAIM,QAAQ,CAACP,YAAY,CAACC,IAAD,CAAb,CAAzD,CAAP;AACH,CAFM;AAIP,OAAO,MAAMQ,cAAc,GAAGC,IAAI,IAAIH,QAAQ,IAAI;AAC9C,SAAOX,YAAY,CAACa,cAAb,CAA4BC,IAA5B,EAAkCF,IAAlC,CAAuCP,IAAI,IAAIM,QAAQ,CAACJ,gBAAgB,CAACF,IAAD,CAAjB,CAAvD,CAAP;AACH,CAFM;AAIP,OAAO,MAAMU,mBAAmB,GAAGC,SAAS,IAAIL,QAAQ,IAAI;AACxD,SAAOX,YAAY,CAACe,mBAAb,CAAiCC,SAAjC,EAA4CJ,IAA5C,CAAiDP,IAAI,IAAIM,QAAQ,CAACH,qBAAqB,CAACH,IAAD,CAAtB,CAAjE,CAAP;AACH,CAFM","sourcesContent":["import * as BlockApiUtil from '../util/block_api_util';\n\nexport const RECEIVE_BLOCK = \"RECEIVE_BLOCK\"\nexport const RECEIVE_ALL_BLOCKS = \"RECEIVE_ALL_BLOCKS\"\nexport const RECEIVE_SPECIFIC_BLOCKS = \"RECEIVE_SPECIFIC_BLOCKS\"\n\nconst receiveBlock = data => {\n    return {\n        type: RECEIVE_BLOCK,\n        data\n    }\n}\n\nconst receiveAllBlocks = data => {\n    return {\n        type: RECEIVE_ALL_BLOCKS,\n        data\n    }\n}\n\nconst receiveSpecificBlocks = data => {\n    return {\n        type: RECEIVE_SPECIFIC_BLOCKS,\n        data\n    }\n}\n\nexport const fetchBlock = block_hash => dispatch => {\n    return BlockApiUtil.fetchBlock(block_hash).then(data => dispatch(receiveBlock(data)))\n}\n\nexport const fetchAllBlocks = time => dispatch => {\n    return BlockApiUtil.fetchAllBlocks(time).then(data => dispatch(receiveAllBlocks(data)))\n}\n\nexport const fetchSpecificBlocks = pool_name => dispatch => {\n    return BlockApiUtil.fetchSpecificBlocks(pool_name).then(data => dispatch(receiveSpecificBlocks(data)))\n}"]},"metadata":{},"sourceType":"module"}